# -*- coding: utf-8 -*-
"""speedTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R4Ng_dNmUQZKKNmIFAgV7kmsS-UPXr4Y

This script will create a broadband stats gathering program
using pyspeedtest to gather the stats
writing out as json to be aggregated and reported later

install pyspeedtest from https://github.com/sivel/speedtest-cli
git clone https://github.com/sivel/speedtest-cli.git
cp speedtest-cli/speedtest.py ./
"""

# imports 
import speedtest
import json
import os.path

#call the python API as per the wiki instructions at https://github.com/sivel/speedtest-cli/wiki
servers = []
# If you want to test against a specific server
# servers = [1234]

threads = None
# If you want to use a single threaded test
# threads = 1

s = speedtest.Speedtest()
s.get_servers(servers)
s.get_best_server()
s.download(threads=threads)
s.upload(threads=threads)
#s.results.share() - don't need this as it creates a url to a graphic

results_dict = s.results.dict()

#print(json.dumps(results_dict, indent=4))

#Only includ the stat's I want plus the timestamp
output = {k : v for k,v in results_dict.items() if k in ["download", "upload", "ping", "timestamp"]}

#either append to existing file if it exists or write out as new file
if os.path.isfile("speedtest.json"):
  mode = "a"
else:
  mode = "w"
with open("speedtest.json", mode) as outfile:
    print(json.dumps(output), file=outfile)